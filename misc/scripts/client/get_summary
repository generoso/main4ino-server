#!/usr/bin/env bash

echo "" > failures.log

source source.sh
function check_recent_version() {
  local dev=$1
  local current=$2
  local latest_file=$3

  local matched=""
  for latest in `cat $latest_file`
  do
    if [ "$current" == "$latest" ]
    then
      matched="YES"
    fi
  done

  if [ "$matched" == "YES" ]
  then
    echo OK | highlight green ".*"
  else
    echo KO | highlight red ".*"
    echo "$dev not last version (current=$current)" >> failures.log
  fi
}

function check_fresh() {
  local timestamp=$1
  local threshold=$2
  local dev=$3
  let timestamp2=$timestamp+$threshold
  local now_timestamp="`date '+%s'`"
  if [ $now_timestamp -gt $timestamp2 ]
  then
    echo KO | highlight red ".*"
    echo "$dev not fresh (update=$timestamp / now=$now_timestamp)" >> failures.log
  else
    echo OK | highlight green ".*"
  fi
}

function get_summary_device() {
  local i=$1
  local versions_tolerance=${VERSIONS_TOLERANCE[$i]:-$VERSIONS_TOLERANCE}
  local log_length=${LOG_LENGTH[$i]:-$LOG_LENGTH}
  local freshness_threshold=${FRESHNESS_THRESHOLD[$i]:-$FRESHNESS_THRESHOLD}
  echo "### Device $i ###" | highlight green ".*"
  local summary_report=`main4ino_get_summary_report $i`
  local aliase=`echo $summary_report | jq -r  '.settings.alias'`
  local version=`echo $summary_report | jq -r  '.settings."~version"'`
  local project=`echo $summary_report | jq -r  '.settings.project'`
  local platform=`echo $summary_report | jq -r  '.settings.platform'`
  local last_report=`main4ino_get_last_report $i | jq -r '.dbId.creation'`
  main4ino_get_firmwares $project $platform  | jq -r .[].version | tail -$versions_tolerance > .versions.latest.file
  local versions_latest_file=.versions.latest.file
  local logl=`echo $summary_report | jq -r  '.settings."~logl"'`
  local logo=`echo $summary_report | jq -r  '.settings."~logo"'`

  echo "Info:"
  echo "- alias          : $aliase" | highlight blue $aliase
  echo "- project        : $project"
  echo "- platform       : $platform"
  echo "- last report    : `check_fresh $last_report $freshness_threshold $i/$aliase` (is: `date --utc -d @$last_report` / shouldbenear `date --utc`)"
  echo "- current version: `check_recent_version $i/$aliase $version $versions_latest_file` (is: $version / shouldbein: `cat $versions_latest_file | tr '\n' ' '`)"
  echo "Summary report:"
  echo "$summary_report" | highlight gray ".*"
  echo "Logs (log level = $logl / log options = $logo):"
  main4ino_get_logs $i $log_length | highlight gray ".*"
  echo "###" | highlight green ".*"
  echo ""
}

main4ino_get_version

for i in $DEVICES_LIST
do 
  get_summary_device $i
done

cat failures.log

if [ "$(cat failures.log)" == "" ]
then
  echo OK | highlight green '.*'
  exit 0
else
  echo KO | highlight red '.*'
  echo "### FAILURES" | highlight red '.*'
  echo $FAILURE | highlight red '.*'
  exit 1
fi
